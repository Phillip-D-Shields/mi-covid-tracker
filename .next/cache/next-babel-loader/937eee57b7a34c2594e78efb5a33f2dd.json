{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/phillip/code/nextjs/mi-covid-tracker/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n//! getStaticProps => static generation(fetch data at build)\n// async function getStaticProps() {\n//! consider an addition for loading and error\n//   function getTheApiData () {\n// let dataOne, dataTwo;\n//     Promise.all([\n//     fetch(\"https://api.covidtracking.com/v1/states/mi/current.json\"),\n//     fetch(\"https://api.covidtracking.com/v1/us/current.json\"),\n//   ]).then(([dataOne, dataTwo]) => {\n//    dataOne = dataOne.json();\n//    dataTwo = dataTwo.json();\n//   });\n//     return ({dataOne, dataTwo});\n//   }\n//   getTheApiData1();\n//! pass the data to the page as props\n// return {\n//   props: { miStats, usStats },\n// };\n// }\ntry {\n  var _await$Promise$all$co = await Promise.all([fetch(\"https://api.covidtracking.com/v1/states/mi/current.json\"), fetch(\"https://api.covidtracking.com/v1/us/current.json\")]).console.log(miData),\n      _await$Promise$all$co2 = _slicedToArray(_await$Promise$all$co, 2),\n      miData = _await$Promise$all$co2[0],\n      usData = _await$Promise$all$co2[1];\n} catch (err) {\n  console.error();\n}\n\nexport function Index(miData, usData) {\n  var miStats = miData,\n      usStats = usData;\n  render(__jsx(React.Fragment, null, __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" Current Michigan Data\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Currently hospitalized: \", miStats.hospitalizedCurrently, \" \"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Currently in ICU: \", miStats.inIcuCurrently), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Deaths: \", miStats.deaths))));\n}\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/phillip/code/nextjs/mi-covid-tracker/pages/index.js"],"names":["Promise","all","fetch","console","log","miData","usData","err","error","Index","miStats","usStats","render","hospitalizedCurrently","inIcuCurrently","deaths"],"mappings":";;;;;AAAA;AACA;AACE;AAEF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACF;AAGA,IAAI;AAAA,8BACqB,MAAMA,OAAO,CAACC,GAAR,CAAY,CACvCC,KAAK,CAAC,yDAAD,CADkC,EAEvCA,KAAK,CAAC,kDAAD,CAFkC,CAAZ,EAI/BC,OAJ+B,CAIvBC,GAJuB,CAInBC,MAJmB,CAD3B;AAAA;AAAA,MACGA,MADH;AAAA,MACWC,MADX;AAMH,CAND,CAME,OAAOC,GAAP,EAAY;AACZJ,EAAAA,OAAO,CAACK,KAAR;AACD;;AAID,OAAO,SAASC,KAAT,CAAeJ,MAAf,EAAuBC,MAAvB,EAA+B;AAAA,MAC/BI,OAD+B,GACVL,MADU;AAAA,MACtBM,OADsB,GACHL,MADG;AAIpCM,EAAAA,MAAM,CACJ,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6BF,OAAO,CAACG,qBAArC,MALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBH,OAAO,CAACI,cAA/B,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaJ,OAAO,CAACK,MAArB,CAPJ,CADF,CADI,CAAN;AAcC;KAlBaN,K","sourcesContent":["//! getStaticProps => static generation(fetch data at build)\n// async function getStaticProps() {\n  //! consider an addition for loading and error\n\n//   function getTheApiData () {\n// let dataOne, dataTwo;\n\n//     Promise.all([\n//     fetch(\"https://api.covidtracking.com/v1/states/mi/current.json\"),\n//     fetch(\"https://api.covidtracking.com/v1/us/current.json\"),\n//   ]).then(([dataOne, dataTwo]) => {\n//    dataOne = dataOne.json();\n//    dataTwo = dataTwo.json();\n//   });\n\n//     return ({dataOne, dataTwo});\n//   }\n//   getTheApiData1();\n  //! pass the data to the page as props\n  // return {\n  //   props: { miStats, usStats },\n  // };\n// }\n\n\ntry {\n  let [miData, usData] = await Promise.all([\n    fetch(\"https://api.covidtracking.com/v1/states/mi/current.json\"),\n    fetch(\"https://api.covidtracking.com/v1/us/current.json\")\n  ]).\nconsole.log(miData);\n} catch (err) {\n  console.error();\n}\n\n\n\nexport function Index(miData, usData) {\n  let [miStats, usStats] = [miData,usData];\n\n  \n  render (\n    <>\n      <section>\n      <h1> Current Michigan Data</h1>\n          <h2>\n            {/* Data displayed was last updated: {miStats.date.toString()} */}\n          </h2>\n          <h2>Currently hospitalized: {miStats.hospitalizedCurrently} </h2>\n          <h2>Currently in ICU: {miStats.inIcuCurrently}</h2>\n          <h2>Deaths: {miStats.deaths}</h2>\n      </section>\n    </>\n  )\n\n  }"]},"metadata":{},"sourceType":"module"}